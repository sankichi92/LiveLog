- provide(:title, @live.title)
%article
  %header.page-header
    %h1<
      = @live.name
      %small
        = " #{I18n.l(@live.date)} @#{@live.place} "
      - if logged_in?
        %ul.list-inline.pull-right
          - if @live.future?
            %li= link_to glyphicon(:send) + '曲を出す', new_live_entry_path(@live), class: 'btn btn-info btn-lg'
          - if @live.album_url.present?
            %li= link_to glyphicon(:picture) + 'アルバム', @live.album_url, class: 'btn btn-primary btn-lg', target: '_blank', 'data-toggle': 'tooltip', 'data-placement': 'top', title: '持っている写真を共有しよう！'

  - if logged_in? && current_user.admin_or_elder?
    %ul.list-inline.text-right
      %li= link_to glyphicon('plus-sign') + 'Add song', new_song_path(live_id: @live.id), class: 'btn btn-default', role: 'button'
      %li= link_to glyphicon(:edit) + 'Edit', edit_live_path(@live), class: 'btn btn-primary', role: 'button'
      - unless @live.songs.exists?
        %li= link_to glyphicon(:trash) + 'Delete', @live, method: :delete, class: 'btn btn-danger', role: 'button'

  - songs = @live.songs.played_order.includes(playings: :user)
  - songs = songs.select { |song| song.editable?(current_user) } if @live.future?
  - if songs.count > 20
    .table-responsive
      %table#songs.table.table-striped.table-condensed
        %thead
          %tr
            %th #
            %th Song
            %th Artist
            %th Members
            %th
        %tbody
          - songs.each do |song|
            - cache_unless logged_in?, song do
              %tr
                %td= song.time_order
                %td= song.watchable?(current_user) ? link_to(song.name, song) : song.name
                %td= song.artist
                %td
                  %ul.list-inline
                    = render sort_by_inst(song.playings)
                %td= render 'songs/link_to_edit', song: song
  - else
    %ol#set-list
      - songs.each do |song|
        - cache_unless logged_in?, song do
          %li
            = song.watchable?(current_user) ? link_to(song.name, song) : song.name
            = "/ #{song.artist}" if song.artist.present?
            = render 'songs/link_to_edit', song: song
            %ul.list-inline
              = render sort_by_inst(song.playings)

