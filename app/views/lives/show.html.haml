- provide(:title, @live.title)
- provide(:description, "#{l(@live.date)} @#{@live.place} #{@songs.map.with_index { |s, i| "#{i + 1}.#{s.name}" }.join(' ')}")
%article
  %header.page-header.d-flex.flex-column.flex-md-row.justify-content-between.align-items-md-center
    %h1
      = @live.name
      %small.text-muted
        = @live.date_and_place
    - if @live.album_url.present? && policy(@live).album?
      = @live.link_to_album class: 'btn btn-primary btn-lg', target: '_blank'

  - if current_user&.admin_or_elder?
    %aside#admin-tools.btn-toolbar.justify-content-end.mb-3{ role: 'toolbar' }
      .btn-group.mr-2{ role: 'group' }
        = @live.new_song_link class: 'btn btn-outline-secondary'
      .btn-group{ role: 'group' }
        = @live.edit_link class: 'btn btn-outline-primary'
        - if @songs.empty?
          = @live.delete_link class: 'btn btn-outline-danger'

  - if @songs.to_a.any?(&:playable?)
    %section.card.mb-3
      .card-body
        .card-title#playlist-label
        %audio.d-block.mb-2#playlist{ controls: true, 'data-audios': @songs.select(&:playable?).to_json(only: :order, methods: %i[title audio_url]) }
        .btn-group
          %button.btn.btn-secondary#playlist-backward{ type: 'button' }= icon 'fas', 'step-backward'
          %button.btn.btn-secondary#playlist-forward{ type: 'button' }= icon 'fas', 'step-forward'

  .song-list
    = render @songs
